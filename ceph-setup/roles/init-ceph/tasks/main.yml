---
# tasks file for init-ceph

- name: Check if ceph is installed
  command: ceph --version
  register: ceph_installed

# This task makes an assumption that the ceph.conf is populated by the nixos setup
- name: Retrieve the fsid from /etc/ceph/ceph.conf
  command: grep fsid /etc/ceph/ceph.conf
  register: fsid

- name: Retrieve the cluster name from /etc/ceph/ceph.conf
  command: grep "cluster name" /etc/ceph/ceph.conf
  register: cluster_name

- name: Generate monitor keyring
  become: true
  command: ceph-authtool --create-keyring /tmp/ceph.mon.keyring --gen-key -n mon. --cap mon 'allow *'
  args:
    creates: /tmp/ceph.mon.keyring
  when: inventory_hostname == groups['mons'][0]
  delegate_to: "{{ groups['mons'][0] }}"

- name: Generate client.admin keyring
  become: true
  command: ceph-authtool --create-keyring /etc/ceph/ceph.client.admin.keyring --gen-key -n client.admin --cap mon 'allow *' --cap osd 'allow *' --cap mds 'allow *' --cap mgr 'allow *'
  args:
    creates: /etc/ceph/ceph.client.admin.keyring
  when: inventory_hostname == groups['mons'][0]
  delegate_to: "{{ groups['mons'][0] }}"

- name: Create bootstrap-osd folder
  become: true
  file:
    path: /var/lib/ceph/bootstrap-osd
    state: directory
    owner: ceph
    group: ceph
    mode: 0755
  delegate_to: "{{ groups['mons'][0] }}"

- name: Generate bootstrap-osd keyring
  become: true
  command: ceph-authtool --create-keyring /var/lib/ceph/bootstrap-osd/ceph.keyring --gen-key -n client.bootstrap-osd --cap mon 'profile bootstrap-osd' --cap mgr 'allow r'
  args:
    creates: /var/lib/ceph/bootstrap-osd/ceph.keyring
  when: inventory_hostname == groups['mons'][0]
  delegate_to: "{{ groups['mons'][0] }}"

- name: Check if ceph.mon.keyring exists
  stat:
    path: /tmp/ceph.mon.keyring
  register: ceph_mon_keyring

- name: Add the client.admin generated keys to the ceph.mon.keyring
  become: true
  command: ceph-authtool /tmp/ceph.mon.keyring --import-keyring /etc/ceph/ceph.client.admin.keyring
  when:
    - ceph_mon_keyring.stat.exists == False
    - inventory_hostname == groups['mons'][0]
  delegate_to: "{{ groups['mons'][0] }}"

- name: Add the bootstrap-osd key to the ceph.mon.keyring
  become: true
  command: ceph-authtool /tmp/ceph.mon.keyring --import-keyring /var/lib/ceph/bootstrap-osd/ceph.keyring
  when:
    - ceph_mon_keyring.stat.exists == False
    - inventory_hostname == groups['mons'][0]
  delegate_to: "{{ groups['mons'][0] }}"

- name: Update the ownership of the ceph.mon.keyring
  become: true
  file:
    path: /tmp/ceph.mon.keyring
    owner: ceph
    group: ceph
    mode: 0600
  when: inventory_hostname == groups['mons'][0]
  delegate_to: "{{ groups['mons'][0] }}"

- name: Generate the monitor map for the first monitor
  command: monmaptool --create --add {{ ansible_hostname }} {{ ansible_default_ipv4.address }} --fsid {{ fsid.stdout.split('=')[1] }} /tmp/monmap
  args:
    creates: /tmp/monmap
  when: inventory_hostname == groups['mons'][0]
  delegate_to: "{{ groups['mons'][0] }}"

- name: Check if the monitor is already in the monmap
  command: monmaptool --print /tmp/monmap
  register: monmap_check
  delegate_to: "{{ groups['mons'][0] }}"

- name: Add the rest of the monitors to the monitor map
  command: monmaptool --add {{ ansible_hostname }} {{ ansible_default_ipv4.address }} --fsid {{ fsid.stdout.split('=')[1] }} /tmp/monmap
  when:
    - inventory_hostname != groups['mons'][0]
    - monmap_check.stdout.find(ansible_hostname) == -1
  delegate_to: "{{ groups['mons'][0] }}"

- name: Fetch the monmap from the first monitor
  fetch:
    src: /tmp/monmap
    dest: "{{ playbook_dir }}/monmap"
    flat: yes
  when:
    - inventory_hostname == groups["mons"][0]
  delegate_to: "{{ groups['mons'][0] }}"

- name: Copy the monitor map to the other nodes
  become: true
  copy:
    src: "{{ playbook_dir }}/monmap"
    remote_src: false
    dest: /tmp/monmap
    owner: "{{ ansible_user }}"
  when:
    - inventory_hostname != groups["mons"][0]

- name: Create the default data directory for monitor hosts
  become: true
  file:
    path: /var/lib/ceph/mon/{{ cluster_name.stdout.split('=')[1] }}-{{ ansible_hostname }}
    state: directory
    owner: ceph
    group: ceph
    mode: 0755
  when:
    - inventory_hostname in groups["mons"]

- name: Fetch the ceph.client.admin.keyring from the first monitor
  become: true
  fetch:
    src: /etc/ceph/ceph.client.admin.keyring
    dest: "{{ playbook_dir }}/ceph.client.admin.keyring"
    flat: yes
  when:
    - inventory_hostname == groups["mons"][0]
  delegate_to: "{{ groups['mons'][0] }}"

- name: Copy ceph.client.admin.keyring to the other nodes
  become: true
  copy:
    src: "{{ playbook_dir }}/ceph.client.admin.keyring"
    remote_src: false
    dest: /etc/ceph/ceph.client.admin.keyring
    owner: ceph
    group: ceph
    mode: 0600
  when:
    - inventory_hostname != groups["mons"][0]

- name: Fetch the ceph.mon.keyring from the first monitor
  become: true
  fetch:
    src: /tmp/ceph.mon.keyring
    dest: "{{ playbook_dir }}/ceph.mon.keyring"
    flat: yes
  when:
    - inventory_hostname == groups["mons"][0]
  delegate_to: "{{ groups['mons'][0] }}"

- name: Copy ceph.mon.keyring to the other nodes
  become: true
  copy:
    src: "{{ playbook_dir }}/ceph.mon.keyring"
    remote_src: false
    dest: /tmp/ceph.mon.keyring
    owner: ceph
    group: ceph
    mode: 0600
  when:
    - inventory_hostname != groups["mons"][0]

- name: Populate the monitor daemons with the monitor map and keyring
  become: true
  become_user: ceph
  command: ceph-mon --mkfs -i {{ ansible_hostname }} --monmap /tmp/monmap --keyring /tmp/ceph.mon.keyring
  args:
    creates: /var/lib/ceph/mon/{{ cluster_name.stdout.split('=')[1] }}-{{ ansible_hostname }}/store.db
  when:
    - inventory_hostname in groups["mons"]

- name: Copy ceph.mon.keyring to the monitor data directory
  become: true
  copy:
    src: /tmp/ceph.mon.keyring
    remote_src: true
    dest: /var/lib/ceph/mon/{{ cluster_name.stdout.split('=')[1] }}-{{ ansible_hostname }}/keyring
    owner: ceph
    group: ceph
    mode: 0600

- name: Reset failed systemctl services
  become: true
  command: systemctl reset-failed

- name: Restart ceph-mon-{{ ansible_hostname }}
  become: true
  service:
    name: ceph-mon-{{ ansible_hostname }}
    state: restarted

#- name: Create key for mgr daemon
#  become: true
#  command: ceph-authtool --create-keyring /etc/ceph/ceph.mgr.keyring --gen-key -n mgr.{{ ansible_hostname }} --cap mon 'allow profile mgr' --cap osd 'allow *' --cap mds 'allow *'
#  args:
#    creates: /etc/ceph/ceph.mgr.keyring
#  when: inventory_hostname == groups['mgrs'][0]
#  delegate_to: "{{ groups['mgrs'][0] }}"
#
#- name: Add the other mgr nodes to the mgr keyring
#  become: true
#  command: ceph-authtool /etc/ceph/ceph.mgr.keyring --gen-key -n mgr.{{ ansible_hostname }} --cap mon 'allow profile mgr' --cap osd 'allow *' --cap mds 'allow *'
#  when:
#    - inventory_hostname != groups["mgrs"][0]
#  delegate_to: "{{ groups['mgrs'][0] }}"
#
#- name: Fetch the mgr keyring from the first mgr node
#  become: true
#  fetch:
#    src: /etc/ceph/ceph.mgr.keyring
#    dest: "{{ playbook_dir }}/ceph.mgr.keyring"
#    flat: yes
#  when:
#    - inventory_hostname == groups["mgrs"][0]
#  delegate_to: "{{ groups['mgrs'][0] }}"
#
#- name: Create the /var/lib/ceph/mgr/{{ cluster_name.stdout.split('=')[1] }}-{{ ansible_hostname }} directory
#  become: true
#  file:
#    path: /var/lib/ceph/mgr/{{ cluster_name.stdout.split('=')[1] }}-{{ ansible_hostname }}
#    state: directory
#    owner: ceph
#    group: ceph
#    mode: 0755
#
#- name: Copy ceph.mgr.keyring to the other nodes
#  become: true
#  copy:
#    src: "{{ playbook_dir }}/ceph.mgr.keyring"
#    remote_src: false
#    dest: /etc/ceph/ceph.mgr.keyring
#    owner: ceph
#    group: ceph
#    mode: 0600
#  when:
#    - inventory_hostname != groups["mgrs"][0]
#
#- name: Copy mgr keyring to /var/lib/ceph/mgr/{{ cluster_name.stdout.split('=')[1] }}-{{ ansible_hostname }}/keyring
#  become: true
#  copy:
#    src: /etc/ceph/ceph.mgr.keyring
#    remote_src: true
#    dest: /var/lib/ceph/mgr/{{ cluster_name.stdout.split('=')[1] }}-{{ ansible_hostname }}/keyring
#    owner: ceph
#    group: ceph
#    mode: 0600
#
#- name: Restart ceph-mgr-{{ ansible_hostname }}
#  become: true
#  service:
#    name: ceph-mgr-{{ ansible_hostname }}
#    state: restarted
